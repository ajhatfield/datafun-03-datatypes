2023-09-10 10:21:20,427 =============================================================
2023-09-10 10:21:20,428 =============================================================
2023-09-10 10:21:20,428 Today is 2023-09-10 at 10:21 AM
2023-09-10 10:21:20,428 This file is running on: posix Darwin 19.6.0
2023-09-10 10:21:20,428 The Python version is: 3.11.4
2023-09-10 10:21:20,428 The active conda environment is:  None
2023-09-10 10:21:20,428 The active pip environment is:    None
2023-09-10 10:21:20,428 The active environment path is:   /Library/Frameworks/Python.framework/Versions/3.11
2023-09-10 10:21:20,428 The current working directory is: /Users/alisonhatfield/Desktop/datafun-03-datatypes
2023-09-10 10:21:20,428 This source file is in:           /Users/alisonhatfield/Desktop/datafun-03-datatypes
2023-09-10 10:21:20,429 =============================================================
2023-09-10 10:21:20,429 =============================================================
2023-09-10 10:21:20,429 Calling functions from main block
2023-09-10 10:21:20,429 score_list: [25, 10, 6, 14, 2, 7, 8, 26, 16, 10, 11, 12, 14, 30, 9, 8, 27, 22, 12, 5]
2023-09-10 10:21:20,432 mean: 13.7
2023-09-10 10:21:20,432 median: 11.5
2023-09-10 10:21:20,432 mode: 10
2023-09-10 10:21:20,432 stdev: 8.079213093521318
2023-09-10 10:21:20,432 variance: 65.27368421052631
2023-09-10 10:21:20,432 minutes_played_list: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
2023-09-10 10:21:20,432 points_scored_list: [2, 6, 9, 12, 16, 18, 20, 22, 26, 30]
2023-09-10 10:21:20,432 correlation between minutes played and points scored: 0.9958085560843652
2023-09-10 10:21:20,432 The equation of the best fit line is: y = 0.5854545454545454x + 0.0
2023-09-10 10:21:20,432 We predict that when minutes played (x) = 750, points scored (y) will be about 439.09090909090907
2023-09-10 10:21:20,433 Given score list: [25, 10, 6, 14, 2, 7, 8, 26, 16, 10, 11, 12, 14, 30, 9, 8, 27, 22, 12, 5]
2023-09-10 10:21:20,433 The max() is 30
2023-09-10 10:21:20,433 The min() is 2
2023-09-10 10:21:20,433 The len() is 20
2023-09-10 10:21:20,433 The sum() is 274
2023-09-10 10:21:20,433 The average is 13.7
2023-09-10 10:21:20,433 Given score list: [25, 10, 6, 14, 2, 7, 8, 26, 16, 10, 11, 12, 14, 30, 9, 8, 27, 22, 12, 5]
2023-09-10 10:21:20,433 Using the built-it function sorted(lst) gives: [2, 5, 6, 7, 8, 8, 9, 10, 10, 11, 12, 12, 14, 14, 16, 22, 25, 26, 27, 30]
2023-09-10 10:21:20,433 Using the built-in function sorted(lst,reverse=True) gives: [30, 27, 26, 25, 22, 16, 14, 14, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 5, 2]
2023-09-10 10:21:20,433 new_scores is: [30, 27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 2]
2023-09-10 10:21:20,433 Popped the first (index=0): 30 and now, new_scores is: [27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 2]
2023-09-10 10:21:20,433 Popped the last (index=-1): 2 and now, new_scores is: [27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4]
2023-09-10 10:21:20,433 score_list: [30, 27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 2]
2023-09-10 10:21:20,433 Scores over 15: [<filter object at 0x10aa86590>]
2023-09-10 10:21:20,433 Cube root of scores: <map object at 0x10aa86c50>
2023-09-10 10:21:20,433 Volume list: [30, 27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 2]
2023-09-10 10:21:20,433 Volume of Scores: [<map object at 0x10aa86b60>]
2023-09-10 10:21:20,434 score_list: [30, 27, 26, 25, 22, 16, 16, 14, 14, 12, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 2]
2023-09-10 10:21:20,434 Scores over 12 (using list comprehensions!): [30, 27, 26, 25, 22, 16, 16, 14, 14]
2023-09-10 10:21:20,434 Tripled scores (using list comprehensions!): [90, 81, 78, 75, 66, 48, 48, 42, 42, 36, 36, 36, 33, 30, 30, 27, 24, 24, 21, 18, 18, 15, 12, 6]
2023-09-10 10:21:20,434 The squareroot of the average points (using list comprehensions): [5.477225575051661, 5.196152422706632, 5.0990195135927845, 5.0, 4.69041575982343, 4.0, 4.0, 3.7416573867739413, 3.7416573867739413, 3.4641016151377544, 3.4641016151377544, 3.4641016151377544, 3.3166247903554, 3.1622776601683795, 3.1622776601683795, 3.0, 2.8284271247461903, 2.8284271247461903, 2.6457513110645907, 2.449489742783178, 2.449489742783178, 2.23606797749979, 2.0, 1.4142135623730951]
